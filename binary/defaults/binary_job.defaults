
! binary_job.defaults


   ! the following MESA/binary parameters are all given default values at initialization.
   ! non-default values can be set using the "&binary_job" namelist at the start of a run,
   ! and they can be set by your code between evolution steps.


   ! the descriptions are divided into the following sections
   ! you can find the section by searching for its title given below

      ! output/input files
      ! starting model
      ! modifications to model


!----------------------------------------------------------------------------------------------

   !# output/input files

          !### show_binary_log_description_at_start

          ! set this false if you want to skip the initial terminal output

       show_binary_log_description_at_start = .true.

          !### binary_history_columns_file

          ! if null string, use default (binary_history_columns.list)

       binary_history_columns_file = ''

          !### warn_binary_extra

          ! Due to changing the run_star_extras functions to hooks,we break existing
          ! run_binary_extras files. This flag sets a warning message and stops the MESA
          ! run until it is set to .false.. This way people will hopefully not be confused
          ! as to why their run_binary_extras functions are not being called.

       warn_binary_extra = .true.

          !### inlist_names(:)

          ! Inlist files for both stars. If modeling a star as a point mass, the corresponding
          ! file is ignored.

       inlist_names(1) = 'inlist1' 
       inlist_names(2) = 'inlist2'

         !### read_extra_binary_job_inlist{1..5}
         !### extra_binary_job_inlist{1..5}_name
         ! You can split your `binary_job` inlist into pieces using the following controls.
         ! BTW: it works recursively, so the extras can read extras too.
         ! if `read_extra_star_job_inlist{1..5}` is true,
         ! then read &star_job from this namelist file

      read_extra_binary_job_inlist1 = .false.
      extra_binary_job_inlist1_name = 'undefined'
      read_extra_binary_job_inlist2 = .false.
      extra_binary_job_inlist2_name = 'undefined'
      read_extra_binary_job_inlist3 = .false.
      extra_binary_job_inlist3_name = 'undefined'
      read_extra_binary_job_inlist4 = .false.
      extra_binary_job_inlist4_name = 'undefined'
      read_extra_binary_job_inlist5 = .false.
      extra_binary_job_inlist5_name = 'undefined'

!----------------------------------------------------------------------------------------------

   !# starting model

          !### evolve_both_stars

          ! Set this to .true. to model the evolution of both stars. If
          ! .false. then only inlist_names(1) will be used, and the other
          ! star will be modeled as a point mass. This option is ignored for
          ! loaded models, to setup a component as a point mass in that case
          ! use 'change_point_mass_i'

       evolve_both_stars = .false.

          !### relax_primary_to_th_eq
          !### log_Lnuc_div_L_for_relax_primary_to_th_eq
          !### min_age_for_relax_primary_to_th_eq
          !### max_steps_for_relax_primary_to_th_eq
          !### no_history_during_relax_primary_to_th_eq
          !### reset_age_for_relax_primary_to_th_eq
          !### tsync_for_relax_primary_to_th_eq

          ! NOT IMPLEMENTED YET!!!
          ! Set relax_primary_to_th_eq to .true. to ignore mass loss, rlof and changes in orbital
          ! period or separation (depending on which was chosen as the initial condition)
          ! until the primary (given by inlist_names(1)) reaches thermal equilibrium. This is meant
          ! to ignore the fast evolution that a ZAMS star can experience as it evolves
          ! to CN equilibrium at its core.

          ! Thermal equilibrium in this case is defined as
          !
          !      log(s% L_nuc_burn_total*Lsun/s% L(1)) < log_Lnuc_div_L_for_relax_primary_to_th_eq,
          !
          ! and the relaxation process  is followed for at least min_age_for_relax_primary_to_th_eq
          ! years, even if the condition is met at the first step. If the process takes more than
          ! max_steps_for_relax_primary_to_th_eq steps, then the simulation is terminated.

          ! If want output to be written to history during the relaxation process, then
          ! no_history_during_relax_primary_to_th_eq = .false.. After relaxation, if
          ! reset_age_relax_primary_to_th_eq = .true., then both model numbers and ages of the
          ! components and the binary will be reset to their values before relaxation.

          ! when modeling a system with rotation and tides, the synchronization timescale can be fixed
          ! for both stars using tsync_for_relax_primary_to_th_eq (in years).

       relax_primary_to_th_eq = .false.
       log_Lnuc_div_L_for_relax_primary_to_th_eq = 0.005
       min_age_for_relax_primary_to_th_eq = 1d2
       max_steps_for_relax_primary_to_th_eq = 1000
       no_history_during_relax_primary_to_th_eq = .true.
       reset_age_for_relax_primary_to_th_eq = .true.
       tsync_for_relax_primary_to_th_eq = 1
       
